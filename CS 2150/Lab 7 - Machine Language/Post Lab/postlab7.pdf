//Gabriel Groover (gtg3vv)

IBCM was surprisingly enjoyable to use. Towards the end of DLD we study opcodes and processor design. It was interesting to see the coding side of the same machine. I found that the whole process was very intuitive, as coding often is, and easy to design. It was somewhat of a leap to realize that you could have the program write itself to have a function loop, but once I grasped this it was very easy. Writing a program similiar to assembly was high level enough that I was able to test and debug the logic and just switch to opcodes to finish the program.The simulator was useful in testing the program, but somewhat frustrating to use. The simulator did not seemed designed to handle programs that do not halt and would corrupt the webpage instead of stopping after the program ran for too long. I feel that after writing the bubble sort operation and the quine in the post lab, I could confidently write short programs in IBCM. It can be tedious, but if it is done neatly, it is certainly doable.