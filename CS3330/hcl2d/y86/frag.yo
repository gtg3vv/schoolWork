                            | # /* $begin data-dep-ys */
0x000: 30f03200000000000000 |     irmovq $50,%rax 	//line:arch:frag:irmovq
0x00a: 6003                 |     addq %rax,%rbx 	//line:arch:frag:addq
0x00c: 50236400000000000000 |     mrmovq 100(%rbx),%rdx //line:arch:frag:mrmovq
                            | # /* $end data-dep-ys */
                            | 
                            | # /* $begin control-dep-ys */
0x016:                      | loop:
0x016: 6123                 |     subq %rdx,%rbx //line:arch:frag:subq
0x018: 743400000000000000   |     jne targ	//line:arch:frag:jne
0x021: 30f20a00000000000000 |     irmovq $10,%rdx //line:arch:frag:irmovq2
0x02b: 701600000000000000   |     jmp loop
0x034:                      | targ:
0x034: 00                   |     halt //line:arch:frag:halt
                            | # /* $end control-dep-ys */
                            | 
                            | # /* $begin pipe-popq-ys */
0x035: 30f20500000000000000 |     irmovq $5, %rdx
0x03f: 30f40001000000000000 |     irmovq $0x100,%rsp
0x049: 40240000000000000000 |     rmmovq %rdx,0(%rsp)
0x053: b04f                 |     popq %rsp		
0x055: 2040                 |     rrmovq %rsp,%rax //line:arch:frag:rrmovq
                            | # /* $end pipe-popq-ys */
                            | 
                            | # /* $begin pipe-popq2-ys */
0x057: 30f20500000000000000 |     irmovq $5, %rdx
0x061: 30f40001000000000000 |     irmovq $0x100,%rsp
0x06b: 40240000000000000000 |     rmmovq %rdx,0(%rsp)
0x075: b04f                 |     popq %rsp
0x077: 10                   |     nop
0x078: 10                   |     nop
0x079: 2040                 |     rrmovq %rsp,%rax
                            | # /* $end pipe-popq2-ys */
                            | 
                            | 
                            | # /* $begin load-store-ys */
0x07b: 50210000000000000000 |     mrmovq 0(%rcx),%rdx   # Load  1
0x085: a02f                 |     pushq  %rdx           # Store 1
0x087: 10                   |     nop
0x088: b02f                 |     popq %rdx             # Load  2
0x08a: 40020000000000000000 |     rmmovq %rax,0(%rdx)   # Store 2
                            | # /* $end load-store-ys */
                            | 
                            | # /* $begin addr-exception-ys */
0x094: 30f00100000000000000 |     irmovq $1,%rax
0x09e: 6344                 |     xorq %rsp,%rsp        # Set stack pointer to 0 and CC to 100
0x0a0: a00f                 |     pushq %rax            # Attempt to write to 0xfffffffffffffff8
0x0a2: 6000                 |     addq  %rax,%rax       # (Should not be executed) Would set CC to 000
                            | # /* $end addr-exception-ys */
0x0a4: 30f00200000000000000 |     irmovq $2, %rax       # Not executed
0x0ae: 30f00300000000000000 |     irmovq $3, %rax	  # Not executed
                            | 
                            | # /* $begin basic-ys */
0x0b8: 30f00100000000000000 |   irmovq  $1,%rax  # I1
0x0c2: 30f30200000000000000 |   irmovq  $2,%rbx  # I2
0x0cc: 30f10300000000000000 |   irmovq  $3,%rcx  # I3
0x0d6: 30f20400000000000000 |   irmovq  $4,%rdx  # I4
0x0e0: 00                   |   halt             # I5
                            | # /* $end basic-ys */
